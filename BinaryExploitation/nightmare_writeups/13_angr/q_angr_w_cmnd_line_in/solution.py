import angr
import claripy

# sample2 is a 64-bit dynamically linked executable

# What this program is doing is pretty obvious, but it was for the sake of figuring out how to use angr on binaries which take input from cmmnd line
# Input is taken from the command line

target = angr.Project('sample2')

# Specify the address which means we have the incorrect input:
bad_addr = 0x4011d6

# Specify the address which means we have the correct input:
good_addr = 0x401331

# Our input is an array of 12 bytes
inp = claripy.BVS("inp", 12*8)

# Establish the entry state
entry_state = target.factory.entry_state(args=["./sample2", inp])

# Establish the simulation
simulation = target.factory.simulation_manager(entry_state)

# Start the simulation
simulation.explore(find = good_addr, avoid = bad_addr)

solution = simulation.found[0]

print(solution.solver.eval(inp, cast_to=bytes))